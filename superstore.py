# -*- coding: utf-8 -*-
"""Superstore.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/125DOwtGeUG9icgNsltTZCqUgbYns2XYJ

Table of Contents
------------------
- Import Libraries
- Read Data
- Get some information about the data
- Data Cleaning
- Data Visualization & Getting Analysis
- Insights
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

import warnings
warnings.filterwarnings('ignore')

"""Read Data"""

df=pd.read_csv('Superstore Sales Dataset.csv')
df.head(3)

df.shape

df.info()

"""Data Cleaning"""

# Remove unnecassary Columns

df.drop(['Row ID','Order ID','Customer ID','Customer Name'],axis=1,inplace=True)

# Display the duplicated rows

df[df.duplicated()]

# Remove Duplicates

df.drop_duplicates(inplace=True)

# get the number of nulls in each column

df.isna().sum()

"""--> There are 11 Nulls in Postal Code Column"""

# display the rows which have nulls

df[df.isnull().any(axis=1)]

"""--> All nulls are from Vermont so get the postal code from google"""

# Get the postal code of Vermont state from google -----> 05401 , and fill the nulls by it

df['Postal Code'].fillna(5401,inplace=True)

# Now No Nulls

df.isna().sum().sum()

# Change the type of Order Date and Ship Date columns from object to date
# Change the type of Postal Code column from float to integer

df['Order Date']=pd.to_datetime(df['Order Date'],format="%d/%m/%Y")
df['Ship Date']=pd.to_datetime(df['Ship Date'],format="%d/%m/%Y")
df['Postal Code']=df['Postal Code'].astype('int')

"""The dataset contains an "order date" column, allowing us to derive additional columns such as "order month," "order year," and "order day"
"""

df[['Order Date', 'Ship Date']].dtypes

df['Order Month'] = df['Order Date'].dt.month
df['Order Year'] = df['Order Date'].dt.year
df['Order Day'] = df['Order Date'].dt.day_name()

"""Calculate the delay period in days between the order date and the shipping date"""

df['Shipping Duration'] = df['Ship Date'] - df['Order Date']
df['Shipping Duration'] = df['Shipping Duration'].dt.days
df['Shipping Duration']

df.head(3)

"""Data Visualization & Getting Analysis"""

import seaborn as sns
import matplotlib.pyplot as plt

# Assuming your dataframe is called 'df'
plt.figure(figsize=(10, 8))

# Choose a color palette. Here, we use 'bright' palette from seaborn
sns.countplot(x=df['Ship Mode'], palette='bright')

plt.xlabel('Ship Mode', fontsize=12)
plt.ylabel('Count', fontsize=12)
plt.title('Ship Mode vs Count', fontsize=14)
plt.show()

"""- Result : Ship Mode of most of the Orders is Standard Class"""

# Category vs Count

plt.figure(figsize=(10, 8))
sns.countplot(x=df['Category'], palette='bright')
plt.xlabel('Category', fontsize=12)
plt.ylabel('Count', fontsize=12)
plt.title('Category vs Count', fontsize=14)
plt.show()

"""- Result : Most of the Orders in Category are Office Supplies"""

# Sub-Category vs Count

plt.figure(figsize=(12,9))
sns.countplot(x=df['Sub-Category'], palette='Accent')
plt.xlabel('Sub-Category',fontsize=12)
plt.ylabel('Count',fontsize=12)
plt.title('Sub-Category vs Count',fontsize=14)
plt.xticks(rotation='vertical')
plt.show()

"""- Result : Most of the Orders in Sub_Category are Binders and Papers"""

# State vs Count

plt.figure(figsize=(11,8))
sns.countplot(x=df['State'],palette='RdYlGn')
plt.xlabel('State',fontsize=12)
plt.ylabel('Count',fontsize=12)
plt.title('State vs Count',fontsize=14)
plt.xticks(rotation='vertical')
plt.show()

"""- Result : Most of the Orders are from California and New York States"""

# Sales of the Top 15 States

top_states=df.groupby(['State']).sum('Sales').sort_values('Sales',ascending=False).head(15)
top_states=top_states[['Sales']].round(2)
top_states.reset_index(inplace=True)
top_states

# Top 15 States vs Sales

fig=px.bar(top_states,x='State',y='Sales',title='Top 15 States vs Sales',height=800,color_discrete_sequence=px.colors.sequential.RdBu)
fig.show()

"""- Result : Most of the Sales are from California and New York States"""

# Sales of the Top 15 Cities

top_cities=df.groupby(['City']).sum('Sales').sort_values('Sales',ascending=False).head(15)
top_cities=top_cities[['Sales']].round(2)
top_cities.reset_index(inplace=True)
top_cities

# Top 15 Cities vs Sales

fig=px.bar(top_cities,x='City',y='Sales',title='Top 15 Cities vs Sales',height=800,color_discrete_sequence=px.colors.sequential.RdBu)
fig.show()

"""- Result : Most of the Sales are from New York City and Los Angeles"""

# Sales per Year

sales_by_Year = df.groupby('Order Year')['Sales'].sum().reset_index()

fig = px.line(sales_by_Year,
              x='Order Year',
              y='Sales',
              title='Sales by Year')
fig.show()

# Sales per month

sales_by_month = df.groupby('Order Month')['Sales'].sum().reset_index()

fig = px.line(sales_by_month,
              x='Order Month',
              y='Sales',
              title='Sales by Month')
fig.show()

# Sales by Day

sales_by_Day = df.groupby('Order Day')['Sales'].sum().reset_index()

fig = px.line(sales_by_Day,
              x='Order Day',
              y='Sales',
              title='Sales by Day')
fig.show()

# Sales of the Categories

Categories=df.groupby('Category').sum('Sales').sort_values('Sales',ascending=False)
Categories=Categories[['Sales']].round(2)
Categories.reset_index(inplace=True)
Categories

# the sales by category

sales_by_category = df.groupby('Category')['Sales'].sum().reset_index()


fig = px.pie(sales_by_category,
            values='Sales',
            names='Category',
            hole=0.5,
            color_discrete_sequence=px.colors.qualitative.Dark2)

fig.update_traces(textposition='inside',textinfo='percent+label')
fig.update_layout(title_text='Sales by Category', title_font=dict(size=17))

fig.show()

"""- Result : Most of the Sales are from Technology Products

Insights

- Ship Mode of most of the Orders is Standard Class
- Most of the Orders are from Consumers
- Most of the Orders in Category are Office Supplies
- Most of the Orders in Sub-Category are Binders and Papers
- Most of the Orders are from California and New York States
- Most of the Sales are from California and New York States
- Most of the Sales are from New York City and Los Angeles
- Most of the Sales are from Technology Products
- Most of the Sales are from Consumers
- Most of the Sales are from West Region
- The Canon imageCLASS 2200 Advanced Copier Product acheived the most Sales
"""